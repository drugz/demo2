# тестовые запросы для graphql
# Открываем http://localhost:4001/graphql
# поочередно копируем graphql в редактор. Можно в разные кладки




# Create new user with mutation query
mutation {
   mergeUser(userId: 1, 
    name: "Oleg", 
    age: 36, 
    email:"oleg@gmail.com",
    score: 1000,
    isDead:false,
    mayBeDead:true,
    class:"Сurator") {
    userId
    name
    age
    email
    score
    isDead
    mayBeDead
    class
  }
}

# Create new user with autogenerated code
mutation {
  sara: createUsers(
    input: {
      id: 2
      userId: 2
      name: "Sara"
      age: 86
      email: "sara@gmail.com"
      score: 100
      isDead: false
      mayBeDead: true
      class: "Сurator"
    }
  ) {
    users {
      name
      age
      email
      score
      isDead
      mayBeDead
      class
    }
  }
  robert: createUsers(
    input: {
      id: 7
      userId: 7
      name: "Robert"
      age: 17
      email: "sara@gmail.com"
      score: 100
      isDead: false
      mayBeDead: true
      class: "Сurator"
    }
  ) {
    users {
      name
      age
      email
      score
      isDead
      mayBeDead
      class
    }
  }
}



# Create new user with autogenerated code
mutation {
  createUsers(
    input: {
      id: 18
      userId: 18
      name: "Sara"
      age: 86
      email: "sara@gmail.com"
      score: 100
      isDead: false
      mayBeDead: true
      class: "Сurator"
    }
  ) {
    users {
      name
      age
      email
      score
      isDead
      mayBeDead
      class
    }
  }
}


# Check All Users
{
  allUsers: users {
    userId
    name
    secondName
    fullName
    age
    email
    score
    isDead
    mayBeDead
    class
  }
  userCount
}

# Update user with autogenerated code
mutation {
  updateUsers(
    where: {
      id: 1
    }
    update: {
      id: 22
      name: "Lara"
      age: 860
      email: "lara@gmail.com"
      score: 100
      isDead: true
      mayBeDead: false
      class: "Сurator"
    }
  ) {
   users {
      id
      name
      age
      email
      score
      isDead
      mayBeDead
      class
    }
  }
}
  






# Delete user Sara
mutation {
  deleteUsers(where: { name: "Sara" }) {
    nodesDeleted
    relationshipsDeleted
  }
}
